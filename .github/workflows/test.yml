name: test

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  golang:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-golang@v2
        with:
          go-version: 1.14

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Build executables
        run: |
          cd golang
          go test ./...
          python ./build.py

      - name: Setup test suite
        run: |
          python -m pip install pytest

      - name: Test executables linux
        run: |
          cd go
          python -m pytest test_binaries.py
        if: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          ENSURECONDA_EXE: ensureconda-linux-amd64

      - name: Test executables darwin
        run: |
          cd go
          python -m pytest test_binaries.py
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          ENSURECONDA_EXE: ensureconda-darwin-amd64

      - name: Test executables windows
        run: |
          cd go
          python -m pytest test_binaries.py
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          ENSURECONDA_EXE: ensureconda-windows-amd64.exe

  python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install tox
      run: |
        pip install tox

    - name: Run Tox
      # Run tox using the version of Python in `PATH`
      run: tox -e py
